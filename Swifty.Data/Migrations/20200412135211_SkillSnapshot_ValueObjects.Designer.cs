// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swifty.Data.Context;

namespace Swifty.Data.Migrations
{
    [DbContext(typeof(SwiftyContext))]
    [Migration("20200412135211_SkillSnapshot_ValueObjects")]
    partial class SkillSnapshot_ValueObjects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Swifty.Core.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Swifty.Core.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("SkillAreaId")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillAreaId");

                    b.HasIndex("SkillLevelId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Swifty.Core.Entities.SkillArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillAreas");
                });

            modelBuilder.Entity("Swifty.Core.Entities.SkillLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkillLevels");
                });

            modelBuilder.Entity("Swifty.Core.Entities.SkillSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminReviewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SnapshotDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("SkillSnapshots");
                });

            modelBuilder.Entity("Swifty.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Swifty.Core.Entities.Skill", b =>
                {
                    b.HasOne("Swifty.Core.Entities.SkillArea", "Area")
                        .WithMany()
                        .HasForeignKey("SkillAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swifty.Core.Entities.SkillLevel", "Level")
                        .WithMany()
                        .HasForeignKey("SkillLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Swifty.Core.Entities.SkillSnapshot", b =>
                {
                    b.OwnsOne("Swifty.Core.Entities.ValueObjects.Auth.UserId", "UserId", b1 =>
                        {
                            b1.Property<int>("SkillSnapshotId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("Id")
                                .HasColumnName("UserId")
                                .HasColumnType("int");

                            b1.HasKey("SkillSnapshotId");

                            b1.ToTable("SkillSnapshots");

                            b1.WithOwner()
                                .HasForeignKey("SkillSnapshotId");
                        });

                    b.OwnsMany("Swifty.Core.Entities.ValueObjects.Skill.SkillReference", "SkillReferences", b1 =>
                        {
                            b1.Property<int>("SkillSnapshotId")
                                .HasColumnType("int");

                            b1.Property<int?>("Id")
                                .HasColumnName("SkillId")
                                .HasColumnType("int");

                            b1.Property<int>("Colour")
                                .HasColumnName("SkillColour")
                                .HasColumnType("int");

                            b1.HasKey("SkillSnapshotId", "Id");

                            b1.ToTable("SkillSnapshotSkillReferences");

                            b1.WithOwner()
                                .HasForeignKey("SkillSnapshotId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
